---
- name: Register Host to Satellite 6.5
  hosts: localhost
  become: yes
  become_user: root
  vars:
    # Put your satellite server FQDN name here
    server: server.domain.com
    # Put your Satellite Organization name here
    org: OrgName
    # Put your lifeCycle you are going to register here.
    lifeCycleEnv: lab
#    # If you have multiple puppet env, then I suggest naming this file specific to env.
#    puppet_conf: puppet.conf
    pkgs:
      - katello-agent
      - insights-client
      - puppet
    svs:
      - goferd
# Commnenting out puppet stuff
#      - puppet
    katello_ca: katello-ca-consumer-latest.noarch.rpm

  tasks:
    - name: 'Download {{ katello_ca }} and {{puppet_conf}} from {{ server }}'
      get_url:
        url: 'https://{{ server }}/pub/{{ item }}'
        dest: /tmp/
        validate_certs: no
      with_items:
        - '{{ katello_ca }}'
 # Commenting out puppet stuff
 #       - '{{ puppet_conf }}'
    - name: Install '{{ katello_ca }}'
      yum:
        name: '/tmp/{{ katello_ca }}'
        state: present
      ignore_errors: yes

    - name: Register to '{{ server }}'
      redhat_subscription:
        state: present
        org_id: '{{ org }}'
        activationkey: '{{lifeCycleEnv}}-rhel{{ ansible_distribution_major_version }}'  

    - name: Install support packages
      yum:
        name: '{{ pkgs }}'
        state: latest
    - name: Start support packages
      service:
        name: '{{ item }}'
        enabled: yes
        state: started
      with_items: '{{ svs }}'


#   Commenting this out for now, because we might not need.
#    - name: 'Put {{ puppet_conf }} on target hosts'
#      copy:
#        src: '/tmp/{{ puppet_conf }}'
#        dest: '/etc/puppetlabs/puppet/{{ puppet_conf }}'
#        owner: root
#        group: root
#        mode: '0644'
#    - name: Create puppet cert 
#      command: puppet agent -tv
#      register: puppet_output
#    - name: Print puppet output 
#      debug:
#        msg: '{{ puppet_output }}'


    - name: Register insights 
      command: insights-client --register
      register: insights_output
    - name: Print insights output
      debug:
        msg: '{{ insights_output }}'


